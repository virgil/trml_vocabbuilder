  <style>
  .view--wod {
    color: #000000;
  }

  .word-display {
    text-align: center;
    margin-bottom: 0.5em;
    margin-top: 0.3em;
  }


  .word-main {
    display: block;
    font-size: 3.2em;
    font-weight: bold;
    line-height: 1.1;
    margin-top: 0.0em; /* Move word higher up */
    margin-bottom: 0.1em;
    color: #000000;
    word-wrap: break-word;
  }

  .word-metadata {
    display: block;
    font-size: 1.1em;
    font-style: italic;
    color: #555555;
    margin-bottom: 1.5em; /* Add space below metadata */
  }

  .content-header {
    display: block;
    font-size: 1.2em;
    font-weight: bold;
    text-align: left;
    margin-bottom: 0.3em;
    color: #333333;
  }

  .content-block {
    display: block; /* Ensure it behaves as block */
    text-align: center;
    margin-top: 0;
    margin-bottom: 1.2em; /* Space after the block */
    color: #000000;
    margin-right: 0.6em;
    margin-left: 0.6em;
  }

  .content-block.definition {
    font-size: 1.7em;
    padding-bottom: 0.3em;
  }

  .content-block.example {
    font-size: 1.5em;
    font-style: italic;
    color: #333333;
  }

  .error-container {
    padding: 20px;
    text-align: center;
    font-style: italic;
    color: #777777;
  }

  .title {
    margin-left: 0.5em;
  }


  .title_bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .bottom_left {
    display: flex;
    align-items: center;
  }

  .bottom_right {
    display: flex;
    gap: 0.5em;
    align-items: center;
  }

  {% if trmnl.plugin_settings.dark_mode == 'yes' %}
  .view--wod {
    color: #FFFFFF;
  }
  .word-main {
    color: #FFFFFF;
  }
  .word-metadata {
    color: #AAAAAA;
    margin-bottom: 1.5em; /* Ensure space persists in dark mode */
  }
  .content-header {
    /*    font-family: Verdana, Geneva, sans-serif; */
    font-family: sans-serif;
    color: #CCCCCC;
  }
  .content-block {
    color: #FFFFFF;
  }
  .content-block.example {
    color: #DDDDDD;
  }
  .error-container {
    color: #AAAAAA;
  }
  {% endif %}

</style>

<div class="view view--full view--wod">
  <!--
  (1) Default is to use a different word each day, sequentially. This is achieved by:

  assign chosen_index = "now" | date: "%s" | plus: trmnl.user.utc_offset | divided_by: 86400 | modulo: max_index
  assign chosen_index = "now" | date: "%j" | plus: trmnl.user.utc_offset | minus: 1 | modulo: max_index
  
  --->
  

 {%liquid
  assign daily_or_random = trmnl.plugin_settings.custom_fields_values.daily_or_random

  assign custom_words = ''
  assign custom_words_flag = "False"
  
  if trmnl.plugin_settings.custom_fields_values.custom_words
     assign custom_words = trmnl.plugin_settings.custom_fields_values.custom_words | parse_json

     assign custom_words_flag = "string_but_not_json"
     
     if custom_words and custom_words != ''
        assign custom_words_flag = custom_words | size
     endif
  
  endif

 %}

<!--
<pre>
Flag__daily_or_random: {{ daily_or_random }}
Flag__custom_words_flag: {{ custom_words_flag }}  
</pre>
-->

  {%liquid

  assign words = default_words

  if custom_words and custom_words != ''
    assign words = custom_words
  endif


  assign max_index = words | size | minus: 1

  if daily_or_random == "word_of_the_day"
    assign chosen_index = "now" | date: "%s" | plus: trmnl.user.utc_offset | divided_by: 86400 | modulo: max_index  
  else 
    assign chosen_index = "now" | date: "%N" | modulo: max_index
  endif

  assign word = words[chosen_index].word | downcase | escape
  assign partOfSpeech = words[chosen_index].partOfSpeech | downcase | escape
  assign meaning = words[chosen_index].meaning | escape
  assign example = words[chosen_index].example | escape


  assign bolded_word = "<strong>" | append: word | append: "</strong>"
  assign example = example | replace: word, bolded_word

  %}

  {% if word and word != '' %}

  <div class="layout layout--col gap--md">

    <div class="word-display">
      <span class="word-main data-pixel-perfect="true"">{{ word | escape }}</span>
      <span class="word-metadata data-pixel-perfect="true"">
        {% if partOfSpeech and partOfSpeech != '' %}({{ partOfSpeech }}){% endif %}
      </span>
    </div>

    {% if meaning and meaning != '' %}
    <span class="content-header">Definition</span>
    <p class="content-block definition data-pixel-perfect="true"">{{ meaning }}</p>
    {% endif %}

    {% if example and example != '' %}
    <p class="content-block example data-pixel-perfect="true"">&quot;{{ example }}&quot;</p>
    {% endif %}
  </div>

  {% else %}
  <div class="error-container">
    Word Data data not found.
  </div>
  {% endif %}

  <div class="title_bar">

    <!-- LEFT SIDE -->
    <span class="bottom_left">
      <img class="image"
        src="{{ trmnl.plugin_settings.icon_url | default: 'https://placehold.co/24x24/000000/FFFFFF/png?text=VB' }}"
        alt="" />
      <span class="title">Vocab Builder</span>
    </span>

    <!-- RIGHT SIDE -->
    <span class="bottom_right">#{{ chosen_index | plus: 1 | escape }}</span>

  </div>

</div>